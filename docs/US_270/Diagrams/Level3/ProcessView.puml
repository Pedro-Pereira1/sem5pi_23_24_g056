@startuml

autonumber

participant ":ElevatorRoute" as Route
participant ":CreateElevatorController" as Controller
participant ":CreateElevatorService" as Service
participant ":Elevator" as Elevator
participant ":ElevatorRepo" as Repo
participant ":ElevatorPersistence" as Schema
participant ":ElevatorMap" as Map
participant ":ElevatorDTO" as DTO
participant ":Building" as Building
participant ":BuildingRepo" as BuildingRepo
participant ":BuildingPersistence" as BuildingPersistence
participant ":FloorRepo" as FloorRepo
participant ":FloorPersistence" as FloorPersistence
participant ":Floor" as Floor


?o->Route: POST
activate Route

Route -> Controller: createElevator(req, res, next)
activate Controller

Controller -> Map: toDto(req.body)
activate Map

Controller <-- Map
deactivate Map


Controller -> Service: createElevator(elevatorDto)
activate Service

Service -> BuildingRepo: findByBuildingCode(buildingCode)
activate BuildingRepo
BuildingRepo -> BuildingPersistence: find
activate BuildingPersistence
BuildingRepo <-- BuildingPersistence
deactivate BuildingPersistence
Service <-- BuildingRepo
deactivate BuildingRepo


Service -> Elevator: create

Service -> Repo: save(elevator)
activate Repo

Repo -> Schema: save
deactivate Repo

Service -> FloorRepo: get floors instances that elevator reaches
activate FloorRepo
FloorRepo -> FloorPersistence: find
activate FloorPersistence
FloorRepo <-- FloorPersistence:
deactivate FloorPersistence
Service <-- FloorRepo
deactivate FloorRepo

Service -> Floor: addElevators(elevator)
Service -> FloorRepo: save(floors)
activate FloorRepo
FloorRepo -> FloorPersistence: save
deactivate FloorRepo

Service -> Map:toDto(room)
activate Map
Map -> DTO: create
deactivate Map

Service --> Controller:
deactivate Service


Controller --> Route: inform success
deactivate Controller

<--Route:



@enduml
